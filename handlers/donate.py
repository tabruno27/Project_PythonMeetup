from aiogram import types, Dispatcher
from aiogram.filters import Command, CommandObject, CommandStart
from aiogram import F
from aiogram.types import URLInputFile
import logging

logger = logging.getLogger(__name__)

async def handle_donate(message: types.Message):
    try:
        donate_text = (
            "üéâ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ:\n"
            "https://pay.cloudtips.ru/p/2bc2ef7b\n\n"
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É! ‚ù§Ô∏è"
        )
        
        await message.answer(
            donate_text,
            reply_markup=types.InlineKeyboardMarkup(
                inline_keyboard=[[
                    types.InlineKeyboardButton(
                        text="üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", 
                        url="https://pay.cloudtips.ru/p/2bc2ef7b"
                    )
                ]]
            )
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–Ω–∞—Ç–∞: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")

def register_donate_handlers(dp: Dispatcher):
    dp.message.register(handle_donate, F.text == "üíé –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç")
