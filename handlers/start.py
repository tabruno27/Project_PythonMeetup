from aiogram import types, Dispatcher
from aiogram.filters import Command
from aiogram.utils.keyboard import ReplyKeyboardBuilder
import os
from datacenter.db_manager import get_speaker_by_telegram_id
from commands import set_bot_commands

async def handle_start(message: types.Message):
    user_id = message.from_user.id

    keyboard = ReplyKeyboardBuilder()
    keyboard.add(types.KeyboardButton(text="/scheduler"))
    keyboard.add(types.KeyboardButton(text="/ask"))
    keyboard.add(types.KeyboardButton(text="/active"))

    if user_id == int(os.getenv('ORGANIZER_TELEGRAM_ID', '0')):
        keyboard.add(types.KeyboardButton(text="/add_speaker"))
        keyboard.add(types.KeyboardButton(text="/delete_speaker"))
        keyboard.add(types.KeyboardButton(text="/update_schedule"))
        role = "–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä"
    elif get_speaker_by_telegram_id(user_id):
        keyboard.add(types.KeyboardButton(text="/my_questions"))
        keyboard.add(types.KeyboardButton(text="/start_talk"))
        keyboard.add(types.KeyboardButton(text="/end_talk"))
        role = "—Å–ø–∏–∫–µ—Ä"
    else:
        role = "—É—á–∞—Å—Ç–Ω–∏–∫"

    try:
        await set_bot_commands(message.bot, user_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥: {e}")
    
    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–∏—Ç–∞–ø–æ–≤. –í—ã –≤–æ—à–ª–∏ –∫–∞–∫: {role}\n\n"
        f"‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –≤ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ Telegram.\n\n"
        f"–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –≤ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏ –µ—ë –≤—Ä—É—á–Ω—É—é."
    )
    
    await message.answer(
        welcome_text,
        reply_markup=keyboard.as_markup(resize_keyboard=True)
    )

def register_start_handlers(dp: Dispatcher):
    dp.message.register(handle_start, Command("start"))