import os
from aiogram import Bot
from aiogram.types import BotCommand, BotCommandScopeChat, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from datacenter.db_manager import get_speaker_by_telegram_id


# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def get_user_role(user_id: int) -> str:
    if user_id == int(os.getenv('ORGANIZER_TELEGRAM_ID', '0')):
        return 'organizer'
    
    speaker = get_speaker_by_telegram_id(user_id)
    if speaker:
        return 'speaker'
    
    return 'user'


def get_keyboard_for_role(role: str) -> ReplyKeyboardBuilder:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ('user', 'speaker', 'organizer')
        
    Returns:
        ReplyKeyboardBuilder: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
    """
    kb = ReplyKeyboardBuilder()
    
    # –ë–∞–∑–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    kb.add(
        KeyboardButton(text="/scheduler"),
        KeyboardButton(text="/active"),
        KeyboardButton(text="/ask")
    )
    kb.row(KeyboardButton(text="üíé –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"))
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–ø–∏–∫–µ—Ä–æ–≤
    if role == 'speaker':
        kb.row(
            KeyboardButton(text="/my_questions"),
            KeyboardButton(text="/start_talk"),
            KeyboardButton(text="/end_talk")
        )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤
    elif role == 'organizer':
        kb.row(
            KeyboardButton(text="/add_speaker"),
            KeyboardButton(text="/delete_speaker")
        )
        kb.row(
            KeyboardButton(text="/update_schedule")
        )
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É)
    if role == 'user':
        kb.adjust(2)
    else:
        kb.adjust(3, 2)
    
    return kb


async def set_bot_commands(bot: Bot, user_id: int = None):
    user_commands = [
        BotCommand(command="/start", description="–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="/scheduler", description="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–∫–ª–∞–¥–æ–≤"),
        BotCommand(command="/ask", description="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ø–∏–∫–µ—Ä—É"),
        BotCommand(command="/active", description="–¢–µ–∫—É—â–∏–π –¥–æ–∫–ª–∞–¥"),
    ]
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–ø–∏–∫–µ—Ä–æ–≤
    speaker_commands = user_commands + [
        BotCommand(command="/my_questions", description="–í–æ–ø—Ä–æ—Å—ã –∫ –º–æ–∏–º –¥–æ–∫–ª–∞–¥–∞–º"),
        BotCommand(command="/start_talk", description="–ù–∞—á–∞—Ç—å –¥–æ–∫–ª–∞–¥"),
        BotCommand(command="/end_talk", description="–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–æ–∫–ª–∞–¥"),
    ]
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤
    organizer_commands = user_commands + [
        BotCommand(command="/add_speaker", description="–î–æ–±–∞–≤–∏—Ç—å —Å–ø–∏–∫–µ—Ä–∞"),
        BotCommand(command="/delete_speaker", description="–£–¥–∞–ª–∏—Ç—å —Å–ø–∏–∫–µ—Ä–∞"),
        BotCommand(command="/update_schedule", description="–û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"),
    ]

    if user_id:
        role = await get_user_role(user_id)
        if role == 'organizer':
            await bot.set_my_commands(organizer_commands, scope=BotCommandScopeChat(chat_id=user_id))
        elif role == 'speaker':
            await bot.set_my_commands(speaker_commands, scope=BotCommandScopeChat(chat_id=user_id))
        else:
            await bot.set_my_commands(user_commands, scope=BotCommandScopeChat(chat_id=user_id))
    else:
        await bot.set_my_commands(user_commands)
