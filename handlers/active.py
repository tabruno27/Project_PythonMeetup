from aiogram import types, Dispatcher
from aiogram.filters import Command
from datacenter.db_manager import get_current_talk

async def handle_active_command(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /active"""
    talk = get_current_talk()
    if not talk:
        await message.answer(
            "‚ùå –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–∫–ª–∞–¥–∞.",
            reply_markup=types.ReplyKeyboardRemove()
        )
        return
        
    response = (
        "üé§ *–¢–µ–∫—É—â–∏–π –¥–æ–∫–ª–∞–¥:*\n\n"
        f"*–ù–∞–∑–≤–∞–Ω–∏–µ:* {talk.title}\n"
        f"*–°–ø–∏–∫–µ—Ä:* {talk.speaker.name}\n"
        f"*–í—Ä–µ–º—è:* {talk.start_time.strftime('%H:%M')} - {talk.end_time.strftime('%H:%M')}"
    )
    
    await message.answer(
        response,
        parse_mode="Markdown",
        reply_markup=types.ReplyKeyboardRemove()
    )

def register_active_handlers(dp: Dispatcher):
    dp.message.register(handle_active_command, Command("active"))